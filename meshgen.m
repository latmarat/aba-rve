function elem = meshgen(boxmin,boxmax,step,dims,folder)

    xDim = dims(1)-1;
    yDim = dims(2)-1;
    zDim = dims(3)-1;  
       
%     % get step size and boundaries for the mesh
%     step   = zeros(1,3);
%     boxmin = zeros(1,3);
%     boxmax = zeros(1,3);
%     
%     % step2d = min(diff(unique(xyz(:,1))));    
%     for ii = 1:3
%         step(ii) = min(diff(unique(xyz(:,ii))));
%         boxmin(ii) = min(xyz(:,ii));
%         boxmax(ii) = max(xyz(:,ii));
%     end

    %% Generate 3D mesh
    % generate nodes 
    [x,y,z] = meshgrid(boxmin(1):step(1):boxmax(1),boxmin(2):step(2):boxmax(2),boxmin(3):step(3):boxmax(3));
    numNodes = numel(x);
    coord = [reshape(x,numNodes,1), reshape(y,numNodes,1), reshape(z,numNodes,1)];
    nodes = [(1:numNodes)', sortrows(coord,[1,3,2])];
    
    numElems = xDim*yDim*zDim;
    
    % allocate array for elements
    elem = zeros(numElems,9);
    count = 1;

    % start loop over image dimensions    
    for ix = 1:xDim
        for iz = 1:zDim
            for iy = 1:yDim

                % get element label
                elem(count,1) = count;

                % nodes on the plane with lower x
                elem(count,2) = iy + (iz-1)*(yDim+1) + (ix-1)*(yDim+1)*(zDim+1);
                elem(count,3) = elem(count,2) + 1;
                elem(count,4) = elem(count,3) + yDim + 1;
                elem(count,5) = elem(count,2) + yDim + 1;

                % nodes on the plane with higher x
                elem(count,6) = iy + (iz-1)*(yDim+1) + ix*(yDim+1)*(zDim+1);
                elem(count,7) = elem(count,6) + 1;
                elem(count,8) = elem(count,7) + yDim + 1;
                elem(count,9) = elem(count,6) + yDim + 1;

                count = count+1;
            end
        end
    end
    
    %% Write inp file
    
    % define file name
    inpFileName = [folder sprintf('_%dx%dx%d.mesh',xDim,yDim,zDim)];
    
    % open inp file and write keywords 
    inpFile = fopen(inpFileName,'wt');
    fprintf(inpFile,'** Generated by meshgen.m **\n');
    fprintf(inpFile,'** ----------------------- **\n**\n');

    % write nodes
    fprintf(inpFile,'*NODE, NSET=AllNodes\n');
    fprintf(inpFile,'%d,\t%e,\t%e, \t%e\n',nodes');

    % write elements
    fprintf(inpFile,'*Element, type=C3D8, ELSET=AllElements\n');
    fmt = [repmat('%d,\t',1,8) '%d\n'];
    fprintf(inpFile,fmt,elem');
    
    %% helper variables
    bnd = zeros(3,2);
    for ii = 1:3
        bnd(ii,:) = [boxmin(ii) boxmax(ii)]; % coordinate extremes
    end
    sign = ['-' '+'];
    
    % format for writing nodes
    lin = 9;
    fmt = [repmat('%d, ',1,lin-1) '%d\n'];
    
    %% node sets for faces    
    fprintf(inpFile,'**\n**\t--- NODE SETS FOR FACES ---\n');
    ind = (1:3)';
    for ii = 1:3
        for jj = 1:2
            condi = nodes(:,ind(1)+1) == bnd(ind(1),jj) &...
                    nodes(:,ind(2)+1) ~= boxmin(ind(2)) &...
                    nodes(:,ind(2)+1) ~= boxmax(ind(2)) &...
                    nodes(:,ind(3)+1) ~= boxmin(ind(3)) &...
                    nodes(:,ind(3)+1) ~= boxmax(ind(3));
            if isempty(nodes(condi))
                fprintf('nset=f_n%s%d is empty\n',sign(jj),ii)
            else
                fprintf(inpFile,'**\n*Nset, nset=f_n%s%d\n',sign(jj),ii);
                fprintf(inpFile,fmt,nodes(condi)');
            end
            if rem(size(nodes(condi),1),lin)~=0
                fprintf(inpFile,'\n');
            end
        end     
        ind = circshift(ind,-1);
    end
    % node sets for edges
    fprintf(inpFile,'**\n**\t--- NODE SETS FOR EDGES ---\n');
    ind = (1:3)';
    vind2 = permn([1,2],2);
    for ii = 1:3
        for jj = 1:4
            condi = nodes(:,ind(1)+1) == bnd(ind(1),vind2(jj,1)) &...
                    nodes(:,ind(2)+1) == bnd(ind(1),vind2(jj,2)) &...
                    nodes(:,ind(3)+1) ~= boxmin(ind(3)) &...
                    nodes(:,ind(3)+1) ~= boxmax(ind(3));
            if isempty(nodes(condi))
                fprintf('nset=e_n%s%d_n%s%d is empty\n',...
                    sign(vind2(jj,1)),ind(1),sign(vind2(jj,2)),ind(2))
            else
                fprintf(inpFile,'**\n*Nset, nset=e_n%s%d_n%s%d\n',...
                    sign(vind2(jj,1)),ind(1),sign(vind2(jj,2)),ind(2));
                fprintf(inpFile,fmt,nodes(condi)');
            end
            if rem(size(nodes(condi),1),lin)~=0
                fprintf(inpFile,'\n');
            end
        end   
        ind = circshift(ind,-1);
    end  
        
    %% node sets for vertices
    fprintf(inpFile,'**\n**\t--- NODE SETS FOR VERTICES ---\n');
    vind = permn([1,2],3);
    vert = zeros(8,4);
    for ii = 1:8
        condi = nodes(:,2) == bnd(1,vind(ii,1)) &...
                nodes(:,3) == bnd(2,vind(ii,2)) &...
                nodes(:,4) == bnd(3,vind(ii,3));
        fprintf(inpFile,'**\n*Nset, nset=v_n%s%d_n%s%d_n%s%d\n',...
                        sign(vind(ii,1)),1,sign(vind(ii,2)),2,sign(vind(ii,3)),3);
        fprintf(inpFile,'%d\n',nodes(condi)');
        vert(ii,:) = nodes(condi,:);
    end
    
    %% node sets for BCs
    for ii = 1:3
        fprintf(inpFile,'\n**\n*Nset, nset=vv_n-%d\n',ii);
        fprintf(inpFile,fmt,vert(vert(:,ii+1)==boxmin(ii))');
        fprintf(inpFile,'\n**\n*Nset, nset=vv_n+%d\n',ii);
        fprintf(inpFile,fmt,vert(vert(:,ii+1)==boxmax(ii))');
    end
    
    fclose(inpFile); 
end
